////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.4
//  \   \         Application : sch2hdl
//  /   /         Filename : Org_Lab1.vf
// /___/   /\     Timestamp : 03/12/2019 18:05:13
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath H:/organization/lab2/OExp02-7SEG/ipcore_dir -intstyle ise -family kintex7 -verilog H:/organization/lab2/OExp02-7SEG/Org_Lab1.vf -w H:/organization/lab2/OExp02-7SEG/Org_Lab1.sch
//Design Name: Org_Lab1
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Seg7_Dev_MUSER_Org_Lab1(flash, 
                               Hexs, 
                               LES, 
                               point, 
                               Scan, 
                               SW0, 
                               AN, 
                               SEGMENT);

    input flash;
    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
    input SW0;
   output [3:0] AN;
   output [7:0] SEGMENT;
   
   wire [3:0] Hex;
   wire [7:0] SEG_TXT;
   wire XLXN_2;
   wire [7:0] XLXN_12;
   wire XLXN_17;
   wire XLXN_18;
   
   MUX2T1_8  MUXHM (.I0(XLXN_12[7:0]), 
                   .I1(SEG_TXT[7:0]), 
                   .s(SW0), 
                   .o(SEGMENT[7:0]));
   MyMC14495  M1 (.D0(Hex[0]), 
                 .D1(Hex[1]), 
                 .D2(Hex[2]), 
                 .D3(Hex[3]), 
                 .LE(XLXN_17), 
                 .point(XLXN_18), 
                 .a(SEG_TXT[0]), 
                 .b(SEG_TXT[1]), 
                 .c(SEG_TXT[2]), 
                 .d(SEG_TXT[3]), 
                 .e(SEG_TXT[4]), 
                 .f(SEG_TXT[5]), 
                 .g(SEG_TXT[6]), 
                 .p(SEG_TXT[7]));
   ScanSync  M2 (.Hexs(Hexs[31:0]), 
                .LES(LES[7:0]), 
                .point(point[7:0]), 
                .Scan(Scan[2:0]), 
                .AN(AN[3:0]), 
                .Hexo(Hex[3:0]), 
                .LE(XLXN_2), 
                .p(XLXN_18));
   Seg_map  M3 (.Hexs(Hexs[31:0]), 
               .Scan(Scan[2:0]), 
               .Seg_map(XLXN_12[7:0]));
   AND2  XLXI_4 (.I0(XLXN_2), 
                .I1(flash), 
                .O(XLXN_17));
endmodule
`timescale 1ns / 1ps

module SSeg7_Dev_MUSER_Org_Lab1(clk, 
                                flash, 
                                Hexs, 
                                LES, 
                                point, 
                                rst, 
                                Start, 
                                SW0, 
                                seg_clk, 
                                seg_clrn, 
                                SEG_PEN, 
                                seg_sout);

    input clk;
    input flash;
    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input rst;
    input Start;
    input SW0;
   output seg_clk;
   output seg_clrn;
   output SEG_PEN;
   output seg_sout;
   
   wire [63:0] SEGMENT;
   wire [63:0] XLXN_1;
   wire [63:0] XLXN_2;
   
   MUX2T1_64  MUXSH2M (.a(XLXN_1[63:0]), 
                      .b(XLXN_2[63:0]), 
                      .sel(SW0), 
                      .o(SEGMENT[63:0]));
   P2S  M2 (.clk(clk), 
           .P_Data(SEGMENT[63:0]), 
           .rst(rst), 
           .Serial(Start), 
           .EN(SEG_PEN), 
           .sout(seg_sout), 
           .s_clk(seg_clk), 
           .s_clrn(seg_clrn));
   HexTo8SEG  SM1 (.flash(flash), 
                  .Hexs(Hexs[31:0]), 
                  .LES(LES[7:0]), 
                  .points(point[7:0]), 
                  .SEG_TXT(XLXN_1[63:0]));
   SSeg_map  SM3 (.Disp_num({Hexs[31:0], Hexs[31:0]}), 
                 .Seg_map(XLXN_2[63:0]));
endmodule
`timescale 1ns / 1ps

module Org_Lab1(BTN_y, 
                clk_100mhz, 
                RSTN, 
                SW, 
                AN, 
                BTN_x, 
                Buzzer, 
                CR, 
                LED, 
                led_clk, 
                led_clrn, 
                LED_PEN, 
                led_sout, 
                RDY, 
                readn, 
                SEGMENT, 
                seg_clk, 
                seg_clrn, 
                SEG_PEN, 
                seg_sout);

    input [3:0] BTN_y;
    input clk_100mhz;
    input RSTN;
    input [15:0] SW;
   output [3:0] AN;
   output [4:0] BTN_x;
   output Buzzer;
   output CR;
   output [7:0] LED;
   output led_clk;
   output led_clrn;
   output LED_PEN;
   output led_sout;
   output RDY;
   output readn;
   output [7:0] SEGMENT;
   output seg_clk;
   output seg_clrn;
   output SEG_PEN;
   output seg_sout;
   
   wire [31:0] Ai;
   wire [31:0] Bi;
   wire [7:0] blink;
   wire [3:0] BTN_OK;
   wire Clk_CPU;
   wire [31:0] Disp_num;
   wire [31:0] Div;
   wire [7:0] LE_out;
   wire N0;
   wire [7:0] point_out;
   wire [3:0] Pulse;
   wire rst;
   wire [15:0] SW_OK;
   wire V5;
   wire [4:0] XLXN_4;
   wire XLXN_24;
   wire XLXN_34;
   wire [31:0] XLXN_37;
   wire [31:0] XLXN_44;
   wire [31:0] XLXN_45;
   wire [31:0] XLXN_46;
   wire [31:0] XLXN_47;
   wire [7:0] XLXN_68;
   wire [7:0] XLXN_69;
   wire [21:0] XLXN_125;
   wire [1:0] XLXN_127;
   wire RDY_DUMMY;
   wire readn_DUMMY;
   
   assign RDY = RDY_DUMMY;
   assign readn = readn_DUMMY;
   SEnter_2_32  M4 (.BTN(BTN_OK[2:0]), 
                   .clk(clk_100mhz), 
                   .Ctrl({SW_OK[7:5], SW_OK[15], SW_OK[0]}), 
                   .Din(XLXN_4[4:0]), 
                   .D_ready(RDY_DUMMY), 
                   .Ai(Ai[31:0]), 
                   .Bi(Bi[31:0]), 
                   .blink(blink[7:0]), 
                   .readn(readn_DUMMY));
   ROM_D  U2 (.a({N0, N0, N0, N0, N0, SW[3], Div[27:24]}), 
             .spo(XLXN_37[31:0]));
   RAM_B  U3 (.addra({N0, N0, N0, N0, N0, SW[3], Div[27:24]}), 
             .clka(XLXN_34), 
             .dina(XLXN_37[31:0]), 
             .wea(SW_OK[4]), 
             .douta(XLXN_44[31:0]));
   Multi_8CH32  U5 (.clk(clk_100mhz), 
                   .Data0(Ai[31:0]), 
                   .data1(Bi[31:0]), 
                   .data2(Div[31:0]), 
                   .data3(XLXN_47[31:0]), 
                   .data4(XLXN_46[31:0]), 
                   .data5(XLXN_45[31:0]), 
                   .data6(XLXN_37[31:0]), 
                   .data7(XLXN_44[31:0]), 
                   .EN(V5), 
                   .LES({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         blink[3:0], N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, blink[7:0], blink[7:0]}), 
                   .point_in({Div[31:0], Div[31:0]}), 
                   .rst(XLXN_24), 
                   .Test(SW_OK[7:5]), 
                   .Disp_num(Disp_num[31:0]), 
                   .LE_out(XLXN_68[7:0]), 
                   .point_out(XLXN_69[7:0]));
   SSeg7_Dev_MUSER_Org_Lab1  U6 (.clk(clk_100mhz), 
                                .flash(Div[25]), 
                                .Hexs(Disp_num[31:0]), 
                                .LES(XLXN_68[7:0]), 
                                .point(XLXN_69[7:0]), 
                                .rst(rst), 
                                .Start(Div[20]), 
                                .SW0(SW_OK[0]), 
                                .seg_clk(seg_clk), 
                                .seg_clrn(seg_clrn), 
                                .SEG_PEN(SEG_PEN), 
                                .seg_sout(seg_sout));
   SPIO  U7 (.clk(clk_100mhz), 
            .EN(V5), 
            .P_Data({SW[13:0], SW_OK[15:0], N0, N0}), 
            .rst(rst), 
            .Start(Div[20]), 
            .counter_set(), 
            .GPIOf0(), 
            .led_clk(led_clk), 
            .led_clrn(led_clrn), 
            .LED_out(), 
            .LED_PEN(LED_PEN), 
            .led_sout(led_sout));
   clk_div  U8 (.clk(clk_100mhz), 
               .rst(XLXN_24), 
               .SW2(SW_OK[2]), 
               .clkdiv(Div[31:0]), 
               .Clk_CPU(Clk_CPU));
   SAnti_jitter  U9 (.clk(clk_100mhz), 
                    .Key_y(BTN_y[3:0]), 
                    .readn(readn_DUMMY), 
                    .RSTN(RSTN), 
                    .SW(SW[15:0]), 
                    .BTN_OK(BTN_OK[3:0]), 
                    .CR(CR), 
                    .Key_out(XLXN_4[4:0]), 
                    .Key_ready(RDY_DUMMY), 
                    .Key_x(BTN_x[4:0]), 
                    .pulse_out(Pulse[3:0]), 
                    .rst(XLXN_24), 
                    .SW_OK(SW_OK[15:0]));
   Seg7_Dev_MUSER_Org_Lab1  U61 (.flash(Div[25]), 
                                .Hexs(Disp_num[31:0]), 
                                .LES(LE_out[7:0]), 
                                .point(point_out[7:0]), 
                                .Scan({SW_OK[1], Div[19:18]}), 
                                .SW0(SW_OK[0]), 
                                .AN(AN[3:0]), 
                                .SEGMENT(SEGMENT[7:0]));
   PIO  U71 (.clk(clk_100mhz), 
            .EN(V5), 
            .PData_in(Ai[31:0]), 
            .rst(N0), 
            .counter_set(XLXN_127[1:0]), 
            .GPIOf0(XLXN_125[21:0]), 
            .LED_out(LED[7:0]));
   INV  XLXI_10 (.I(clk_100mhz), 
                .O(XLXN_34));
   VCC  XLXI_11 (.P(V5));
   GND  XLXI_12 (.G(N0));
   BUF  XLXI_23 (.I(V5), 
                .O(Buzzer));
endmodule
